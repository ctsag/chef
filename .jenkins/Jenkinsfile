pipeline {

  agent any

  environment {
    cookbookDir = 'cookbooks/nothingness'
    branchType = env.GIT_BRANCH.substring(0, 2)
  }

  stages {

    stage('Lint Tests') {
      when {
        not {
          branch 'master'
        }
      }
      parallel {
        stage('CookStyle') {
          steps {
            sh 'cookstyle -DES ${cookbookDir}'
          }
        }
        stage('Foodcritic') {
          steps {
            sh 'foodcritic ${cookbookDir}'
          }
        }
      }
    }

    stage('Unit Tests') {
      when {
        not {
          branch 'master'
        }
      }
      steps {
        dir(cookbookDir) {
          sh 'chef exec rspec -f d spec/unit/recipes/*'
        }
      }
    }

    stage('Integration Tests') {
      when {
        allOf {
          environment name: 'branchType', value: 'PR';
          environment name: 'CHANGE_TARGET', value: 'master'
          expression {
            return (env.CHANGE_BRANCH == null) ? true : env.CHANGE_BRANCH.contains('/emergency-') 
          }
        }
      }
      steps {
        dir(cookbookDir) {
          sh 'kitchen verify dev'
        }
      }
    }

    stage('Upload Chef data') {
      when {
        branch 'master'
      }
      steps {
        sh 'cp ${JENKINS_HOME}/.chef/chefadmin.pem .chef/'
        sh 'knife ssl fetch'
        sh 'knife ssl check'
        sh 'knife cookbook upload nothingness'
        sh 'knife role from file ${cookbookDir}/roles/*'
        sh 'knife environment from file ${cookbookDir}/environments/*'
      }
    }

    stage('Admin and Dev Deployment') {
      when {
        branch 'master'
      }
      parallel {
        stage('Admin Deployment') {
          steps {
            sh 'knife ssh -e "chef_environment:admin" "chef-client" --ssh-user root'
          }
        }
        stage('Dev Deployment') {
          steps {
            sh 'knife ssh -e "chef_environment:dev" "chef-client" --ssh-user root'
          }
        }
      }
    }

    stage('Admin and Dev Acceptance Tests') {
      when {
        branch 'master'
      }
      parallel {
        stage('Admin Acceptance Tests') {
          steps {
            dir(cookbookDir) {
              sh './inspec_env.sh admin'
            }
          }
        }
        stage('Dev Acceptance Tests') {
          steps {
            dir(cookbookDir) {
              sh './inspec_env.sh dev'
            }
          }
        }
      }
    }

    stage('QA Deployment') {
      when {
        branch 'master'
      }
      steps {
        input('Deploy to QA?')
        sh 'knife ssh -e "chef_environment:qa" "chef-client" --ssh-user root'
      }
    }

    stage('QA Acceptance Tests') {
      when {
        branch 'master'
      }
      steps {
        dir(cookbookDir) {
          sh './inspec_env.sh qa'
        }
      }
    }

    stage('Staging Deployment') {
      when {
        branch 'master'
      }
      steps {
        input('Deploy to Staging?')
        sh 'knife ssh -e "chef_environment:stage" "chef-client" --ssh-user root'
      }
    }

    stage('Staging Acceptance Tests') {
      when {
        branch 'master'
      }
      steps {
        dir(cookbookDir) {
          sh './inspec_env.sh stage'
        }
      }
    }

    stage('Production Deployment') {
      when {
        branch 'master'
      }
      steps {
        input('Deploy to Staging?')
        sh 'knife ssh -e "chef_environment:prod" "chef-client" --ssh-user root'
      }
    }

    stage('Production Acceptance Tests') {
      when {
        branch 'master'
      }
      steps {
        dir(cookbookDir) {
          sh './inspec_env.sh prod'
        }
      }
    }

  }

  post {
    always {
      dir(cookbookDir) {
        sh 'kitchen destroy'
      }
    }
  }

}
